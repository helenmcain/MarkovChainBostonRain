# -*- coding: utf-8 -*-
"""Fri_Sat_Sun_pattern_matrix.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kostsTXf4w3yNnHaXRZpTwY4vCrMcsNc
"""

import pandas as pd

weather = pd.read_csv('rain_data.csv')
weather.rename(columns = {"prcp": "precipitation"}, inplace = True)
weather["precipitation"] = weather["precipitation"].apply(lambda x: 1 if x > 0 else 0)
weather

days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']

weather["day_of_week"] = days * (365/7).__floor__() + ['Monday', 'Tuesday']

weekends = weather[weather["day_of_week"].isin(["Friday", "Saturday", "Sunday"])].reset_index(drop=True)

weekends_condensed = pd.DataFrame(columns=["Start Date", "Precip List", "State"])

full_dates = weekends['time'].to_list()
full_precip = weekends['precipitation'].to_list()

dates = []
precip_lists = []
states = []

for i in range(0, len(full_dates), 3):
  dates.append(full_dates[i])
  precip_lists.append(full_precip[i:i+3])

weekends_condensed["Start Date"] = dates
weekends_condensed["Precip List"] = precip_lists

for each in precip_lists:
  if each == [0, 0, 0]:
    states.append("No rain")
  elif each == [1, 0, 0]:
    states.append("Only Friday")
  elif each == [0, 1, 0]:
    states.append("Only Saturday")
  elif each == [0, 0, 1]:
    states.append("Only Sunday")
  elif each == [1, 1, 0]:
    states.append("Friday and Saturday")
  elif each == [1, 0, 1]:
    states.append("Friday and Sunday")
  elif each == [0, 1, 1]:
    states.append("Saturday and Sunday")
  else:
    states.append("Rain all weekend")


weekends_condensed["State"] = states

weekends_condensed

def get_transition_tuples(list):
    """converts list of weather patterns into a collection of two-day tuples"""
    return [(list[i - 1], list[i]) for i in range(1, len(list))]

weekend_tuples = get_transition_tuples(states)

states_index = ["No rain", "Only Friday", "Only Saturday", "Only Sunday", "Friday and Saturday", "Friday and Sunday", "Saturday and Sunday", "Rain all weekend"]
transition_counts = pd.DataFrame(0, index=states_index, columns=states_index)

for each in weekend_tuples:
  transition_counts.loc[each[0], each[1]] += 1


transition_counts

transition_matrix = transition_counts.div(transition_counts.sum(axis = 1), axis = 0).fillna(0.00)

transition_matrix